{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eyder andres acalo\\\\Downloads\\\\proyectos_Carlos\\\\proyectos_Carlos\\\\juego_tic_tac_toe\\\\juego\\\\src\\\\components\\\\WinnerModal.jsx\";\n// Se importa el componente Square desde el archivo './Square.jsx'\nimport { Square } from './Square.jsx';\n\n// Define un componente funcional llamado WinnerModal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function WinnerModal({\n  winner,\n  resetGame\n}) {\n  // Si no hay un ganador (winner === null), no muestra nada y retorna null\n  if (winner === null) return null;\n\n  // Se determina el texto a mostrar en función de si hay un ganador o es un empate\n  const winnerText = winner === false ? 'Empate' : 'Ganó:';\n\n  // Retorna un elemento <section> que muestra el mensaje de ganador o empate\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"winner\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: winnerText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"win\",\n        children: winner && /*#__PURE__*/_jsxDEV(Square, {\n          children: winner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Empezar de nuevo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = WinnerModal;\nvar _c;\n$RefreshReg$(_c, \"WinnerModal\");","map":{"version":3,"names":["Square","jsxDEV","_jsxDEV","WinnerModal","winner","resetGame","winnerText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/eyder andres acalo/Downloads/proyectos_Carlos/proyectos_Carlos/juego_tic_tac_toe/juego/src/components/WinnerModal.jsx"],"sourcesContent":["// Se importa el componente Square desde el archivo './Square.jsx'\nimport { Square } from './Square.jsx'\n\n// Define un componente funcional llamado WinnerModal\nexport function WinnerModal({ winner, resetGame }) {\n  // Si no hay un ganador (winner === null), no muestra nada y retorna null\n  if (winner === null) return null\n\n  // Se determina el texto a mostrar en función de si hay un ganador o es un empate\n  const winnerText = winner === false ? 'Empate' : 'Ganó:'\n\n  // Retorna un elemento <section> que muestra el mensaje de ganador o empate\n  return (\n    <section className='winner'>\n      <div className='text'>\n        <h2>{winnerText}</h2>\n\n        <header className='win'>\n          {/* Muestra el símbolo del ganador (si lo hay) utilizando el componente Square */}\n          {winner && <Square>{winner}</Square>}\n        </header>\n\n        <footer>\n          {/* Botón para reiniciar el juego al hacer clic */}\n          <button onClick={resetGame}>Empezar de nuevo</button>\n        </footer>\n      </div>\n    </section>\n  )\n}\n"],"mappings":";AAAA;AACA,SAASA,MAAM,QAAQ,cAAc;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,SAASC,WAAWA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,EAAE;EACjD;EACA,IAAID,MAAM,KAAK,IAAI,EAAE,OAAO,IAAI;;EAEhC;EACA,MAAME,UAAU,GAAGF,MAAM,KAAK,KAAK,GAAG,QAAQ,GAAG,OAAO;;EAExD;EACA,oBACEF,OAAA;IAASK,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACzBN,OAAA;MAAKK,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBN,OAAA;QAAAM,QAAA,EAAKF;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAErBV,OAAA;QAAQK,SAAS,EAAC,KAAK;QAAAC,QAAA,EAEpBJ,MAAM,iBAAIF,OAAA,CAACF,MAAM;UAAAQ,QAAA,EAAEJ;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eAETV,OAAA;QAAAM,QAAA,eAEEN,OAAA;UAAQW,OAAO,EAAER,SAAU;UAAAG,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACE,EAAA,GAzBeX,WAAW;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}