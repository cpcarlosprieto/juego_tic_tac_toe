{"ast":null,"code":"import { WINNER_COMBOS } from '../constants.js';\nexport const checkWinnerFrom = boardToCheck => {\n  // revisamos todas las combinaciones ganadoras\n  // para ver si X u O ganó\n  for (const combo of WINNER_COMBOS) {\n    const [a, b, c] = combo;\n    if (boardToCheck[a] && boardToCheck[a] === boardToCheck[b] && boardToCheck[a] === boardToCheck[c]) {\n      return boardToCheck[a];\n    }\n  }\n  // si no hay ganador\n  return null;\n};\nexport const checkEndGame = newBoard => {\n  // revisamos si hay un empate\n  // si no hay más espacios vacíos\n  // en el tablero\n  return newBoard.every(square => square !== null);\n};","map":{"version":3,"names":["WINNER_COMBOS","checkWinnerFrom","boardToCheck","combo","a","b","c","checkEndGame","newBoard","every","square"],"sources":["C:/Users/eyder andres acalo/OneDrive/Escritorio/proyectos_Carlos/juego_tic_tac_toe/juego/src/logic/board.js"],"sourcesContent":["import { WINNER_COMBOS } from '../constants.js'\n\nexport const checkWinnerFrom = (boardToCheck) => {\n  // revisamos todas las combinaciones ganadoras\n  // para ver si X u O ganó\n  for (const combo of WINNER_COMBOS) {\n    const [a, b, c] = combo\n    if (\n      boardToCheck[a] &&\n      boardToCheck[a] === boardToCheck[b] &&\n      boardToCheck[a] === boardToCheck[c]\n    ) {\n      return boardToCheck[a]\n    }\n  }\n  // si no hay ganador\n  return null\n}\n\nexport const checkEndGame = (newBoard) => {\n  // revisamos si hay un empate\n  // si no hay más espacios vacíos\n  // en el tablero\n  return newBoard.every((square) => square !== null)\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAE/C,OAAO,MAAMC,eAAe,GAAIC,YAAY,IAAK;EAC/C;EACA;EACA,KAAK,MAAMC,KAAK,IAAIH,aAAa,EAAE;IACjC,MAAM,CAACI,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGH,KAAK;IACvB,IACED,YAAY,CAACE,CAAC,CAAC,IACfF,YAAY,CAACE,CAAC,CAAC,KAAKF,YAAY,CAACG,CAAC,CAAC,IACnCH,YAAY,CAACE,CAAC,CAAC,KAAKF,YAAY,CAACI,CAAC,CAAC,EACnC;MACA,OAAOJ,YAAY,CAACE,CAAC,CAAC;IACxB;EACF;EACA;EACA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMG,YAAY,GAAIC,QAAQ,IAAK;EACxC;EACA;EACA;EACA,OAAOA,QAAQ,CAACC,KAAK,CAAEC,MAAM,IAAKA,MAAM,KAAK,IAAI,CAAC;AACpD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}